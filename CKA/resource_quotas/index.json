{
  "title": "CKA ResourceQuotas & LimitRanges",
  "description": "Learn how to configure ResourceQuotas and LimitRanges in Kubernetes, and debug pod scheduling issues when limits are exceeded.",
  "difficulty": "Intermediate",
  "time": "20 minutes",
  "details": {
    "steps": [
      {
        "title": "Create Namespace",
        "text": "step1.md"
      },
      {
        "title": "Apply ResourceQuota",
        "text": "step2.md"
      },
      {
        "title": "Apply LimitRange",
        "text": "step3.md"
      },
      {
        "title": "Test with a Pod",
        "text": "step4.md"
      },
      {
        "title": "Fix the Pod",
        "text": "step5.md"
      }
    ],
    "intro": {
      "text": "intro.md"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": [
      {
        "name": "resource-quota.yaml",
        "type": "file",
        "content": "apiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: compute-quota\nspec:\n  hard:\n    pods: \"2\"\n    requests.cpu: \"500m\"\n    requests.memory: \"512Mi\"\n    limits.cpu: \"1\"\n    limits.memory: \"1Gi\""
      },
      {
        "name": "limit-range.yaml",
        "type": "file",
        "content": "apiVersion: v1\nkind: LimitRange\nmetadata:\n  name: default-limits\nspec:\n  limits:\n  - default:\n      cpu: \"200m\"\n      memory: \"256Mi\"\n    defaultRequest:\n      cpu: \"100m\"\n      memory: \"128Mi\"\n    type: Container"
      },
      {
        "name": "bad-pod.yaml",
        "type": "file",
        "content": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: bad-pod\nspec:\n  containers:\n  - name: stress\n    image: busybox\n    command: [\"sh\", \"-c\", \"sleep 3600\"]"
      },
      {
        "name": "fixed-pod.yaml",
        "type": "file",
        "content": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: fixed-pod\nspec:\n  containers:\n  - name: stress\n    image: busybox\n    command: [\"sh\", \"-c\", \"sleep 3600\"]\n    resources:\n      requests:\n        cpu: \"100m\"\n        memory: \"128Mi\"\n      limits:\n        cpu: \"200m\"\n        memory: \"256Mi\""
      }
    ]
  },
  "environment": {
    "showdashboard": true,
    "dashboards": [
      { "name": "Terminal", "port": 8080 }
    ]
  },
  "backend": {
    "imageid": "kubernetes-kubeadm-2nodes"
  }
}
